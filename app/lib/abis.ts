export const hypersubAbi721 = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "approved", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: true, internalType: "address", name: "operator", type: "address" },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint256", name: "tokens", type: "uint256" }],
    name: "FeeAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
    ],
    name: "FeeCollectorChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      { indexed: false, internalType: "uint256", name: "tokensTransferred", type: "uint256" },
    ],
    name: "FeeTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "secondsGranted", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "expiresAt", type: "uint256" },
    ],
    name: "Grant",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint8", name: "version", type: "uint8" }],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "address", name: "account", type: "address" }],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "tokensTransferred", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "timePurchased", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "rewardPoints", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "expiresAt", type: "uint256" },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint256", name: "id", type: "uint256" },
      { indexed: false, internalType: "uint16", name: "rewardBps", type: "uint16" },
    ],
    name: "ReferralCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint256", name: "id", type: "uint256" }],
    name: "ReferralDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
      { indexed: true, internalType: "address", name: "referrer", type: "address" },
      { indexed: true, internalType: "uint256", name: "referralId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "rewardAmount", type: "uint256" },
    ],
    name: "ReferralPayout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "tokensTransferred", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "timeReclaimed", type: "uint256" },
    ],
    name: "Refund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint256", name: "tokensIn", type: "uint256" }],
    name: "RefundTopUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: true, internalType: "address", name: "slasher", type: "address" },
      { indexed: false, internalType: "uint256", name: "rewardPointsSlashed", type: "uint256" },
    ],
    name: "RewardPointsSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: false, internalType: "uint256", name: "tokensTransferred", type: "uint256" },
    ],
    name: "RewardWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint256", name: "tokens", type: "uint256" }],
    name: "RewardsAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint256", name: "supplyCap", type: "uint256" }],
    name: "SupplyCapChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      { indexed: true, internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: "address", name: "recipient", type: "address" }],
    name: "TransferRecipientChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "address", name: "account", type: "address" }],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "account", type: "address" },
      { indexed: false, internalType: "uint256", name: "tokensTransferred", type: "uint256" },
    ],
    name: "Withdraw",
    type: "event",
  },
  { inputs: [], name: "acceptOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "numSeconds", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [{ internalType: "string", name: "uri", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address[]", name: "accounts", type: "address[]" }],
    name: "canRefund",
    outputs: [{ internalType: "bool", name: "refundable", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [{ internalType: "string", name: "uri", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "code", type: "uint256" },
      { internalType: "uint16", name: "bps", type: "uint16" },
    ],
    name: "createReferralCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorBalance",
    outputs: [{ internalType: "uint256", name: "balance", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "code", type: "uint256" }],
    name: "deleteReferralCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Address",
    outputs: [{ internalType: "address", name: "erc20", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBalance",
    outputs: [{ internalType: "uint256", name: "balance", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeSchedule",
    outputs: [
      { internalType: "address", name: "feeCollector", type: "address" },
      { internalType: "uint16", name: "feeBps", type: "uint16" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "accounts", type: "address[]" },
      { internalType: "uint256", name: "secondsToAdd", type: "uint256" },
    ],
    name: "grantTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "symbol", type: "string" },
          { internalType: "string", name: "contractUri", type: "string" },
          { internalType: "string", name: "tokenUri", type: "string" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "uint256", name: "tokensPerSecond", type: "uint256" },
          { internalType: "uint256", name: "minimumPurchaseSeconds", type: "uint256" },
          { internalType: "uint16", name: "rewardBps", type: "uint16" },
          { internalType: "uint8", name: "numRewardHalvings", type: "uint8" },
          { internalType: "uint16", name: "feeBps", type: "uint16" },
          { internalType: "address", name: "feeRecipient", type: "address" },
          { internalType: "address", name: "erc20TokenAddr", type: "address" },
        ],
        internalType: "struct Shared.InitParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPurchaseSeconds",
    outputs: [{ internalType: "uint256", name: "numSeconds", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "numTokens", type: "uint256" }],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "numTokens", type: "uint256" },
    ],
    name: "mintFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "numTokens", type: "uint256" },
      { internalType: "uint256", name: "referralCode", type: "uint256" },
      { internalType: "address", name: "referrer", type: "address" },
    ],
    name: "mintWithReferral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "numTokens", type: "uint256" },
      { internalType: "uint256", name: "referralCode", type: "uint256" },
      { internalType: "address", name: "referrer", type: "address" },
    ],
    name: "mintWithReferralFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "pause", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [],
    name: "paused",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "reconcileERC20Balance", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [],
    name: "reconcileNativeBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "address", name: "recipientAddress", type: "address" },
      { internalType: "uint256", name: "tokenAmount", type: "uint256" },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "recipient", type: "address" }],
    name: "recoverNativeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "code", type: "uint256" }],
    name: "referralCodeBps",
    outputs: [{ internalType: "uint16", name: "bps", type: "uint16" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "numTokensIn", type: "uint256" },
      { internalType: "address[]", name: "accounts", type: "address[]" },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "refundableBalanceOf",
    outputs: [{ internalType: "uint256", name: "numSeconds", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address[]", name: "accounts", type: "address[]" }],
    name: "refundableTokenBalanceOfAll",
    outputs: [{ internalType: "uint256", name: "numTokens", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "rewardBalanceOf",
    outputs: [{ internalType: "uint256", name: "numTokens", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardBps",
    outputs: [{ internalType: "uint16", name: "bps", type: "uint16" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardMultiplier",
    outputs: [{ internalType: "uint256", name: "multiplier", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPoolBalance",
    outputs: [{ internalType: "uint256", name: "numTokens", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "supplyCap", type: "uint256" }],
    name: "setSupplyCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "recipient", type: "address" }],
    name: "setTransferRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "slashRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "subscriptionOf",
    outputs: [
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "uint256", name: "refundableAmount", type: "uint256" },
      { internalType: "uint256", name: "rewardPoints", type: "uint256" },
      { internalType: "uint256", name: "expiresAt", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyDetail",
    outputs: [
      { internalType: "uint256", name: "count", type: "uint256" },
      { internalType: "uint256", name: "cap", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "numTokens", type: "uint256" }],
    name: "timeValue",
    outputs: [{ internalType: "uint256", name: "numSeconds", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "uri", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCreatorEarnings",
    outputs: [{ internalType: "uint256", name: "total", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewardPoints",
    outputs: [{ internalType: "uint256", name: "numPoints", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tps",
    outputs: [{ internalType: "uint256", name: "numTokens", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "transferAllBalances", outputs: [], stateMutability: "nonpayable", type: "function" },
  { inputs: [], name: "transferFees", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferRecipient",
    outputs: [{ internalType: "address", name: "recipient", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "unpause", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [{ internalType: "address", name: "newCollector", type: "address" }],
    name: "updateFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "contractUri", type: "string" },
      { internalType: "string", name: "tokenUri", type: "string" },
    ],
    name: "updateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { inputs: [], name: "withdraw", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [],
    name: "withdrawAndTransferFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { inputs: [], name: "withdrawRewards", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
] as const;

export const erc721Abi = [
  {
    inputs: [
      { internalType: "address", name: "initialOwner", type: "address" },
      { internalType: "address", name: "delegationRegistry", type: "address" },
      {
        internalType: "address",
        name: "delegationRegistryV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "ClaimInactive", type: "error" },
  { inputs: [], name: "ClaimNotInitialized", type: "error" },
  { inputs: [], name: "ExpiredSignature", type: "error" },
  { inputs: [], name: "FailedToTransfer", type: "error" },
  { inputs: [], name: "InvalidAirdrop", type: "error" },
  { inputs: [], name: "InvalidInput", type: "error" },
  { inputs: [], name: "InvalidInstance", type: "error" },
  { inputs: [], name: "InvalidSignature", type: "error" },
  { inputs: [], name: "InvalidStartDate", type: "error" },
  { inputs: [], name: "InvalidStorageProtocol", type: "error" },
  { inputs: [], name: "MustUseSignatureMinting", type: "error" },
  { inputs: [], name: "TokenDNE", type: "error" },
  { inputs: [], name: "TooManyRequested", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "AdminApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "AdminRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creatorContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "instanceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initializer",
        type: "address",
      },
    ],
    name: "ClaimInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creatorContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "instanceId",
        type: "uint256",
      },
    ],
    name: "ClaimMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creatorContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "instanceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "mintCount",
        type: "uint16",
      },
    ],
    name: "ClaimMintBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creatorContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "instanceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "mintCount",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFor",
        type: "address",
      },
    ],
    name: "ClaimMintProxy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creatorContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "instanceId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "mintCount",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mintFor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
    ],
    name: "ClaimMintSignature",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creatorContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "instanceId",
        type: "uint256",
      },
    ],
    name: "ClaimUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_REGISTRY",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DELEGATION_REGISTRY_V2",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MEMBERSHIP_ADDRESS",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_FEE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_FEE_MERKLE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "address[]", name: "recipients", type: "address[]" },
      { internalType: "uint16[]", name: "amounts", type: "uint16[]" },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "approveAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint32", name: "mintIndex", type: "uint32" },
    ],
    name: "checkMintIndex",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint32[]", name: "mintIndices", type: "uint32[]" },
    ],
    name: "checkMintIndices",
    outputs: [{ internalType: "bool[]", name: "minted", type: "bool[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "string", name: "locationChunk", type: "string" },
    ],
    name: "extendTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmins",
    outputs: [{ internalType: "address[]", name: "admins", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
    ],
    name: "getClaim",
    outputs: [
      {
        components: [
          { internalType: "uint32", name: "total", type: "uint32" },
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          {
            internalType: "enum ILazyPayableClaim.StorageProtocol",
            name: "storageProtocol",
            type: "uint8",
          },
          { internalType: "uint8", name: "contractVersion", type: "uint8" },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          {
            internalType: "address payable",
            name: "paymentReceiver",
            type: "address",
          },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.Claim",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "getClaimForToken",
    outputs: [
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      {
        components: [
          { internalType: "uint32", name: "total", type: "uint32" },
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          {
            internalType: "enum ILazyPayableClaim.StorageProtocol",
            name: "storageProtocol",
            type: "uint8",
          },
          { internalType: "uint8", name: "contractVersion", type: "uint8" },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          {
            internalType: "address payable",
            name: "paymentReceiver",
            type: "address",
          },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.Claim",
        name: "claim",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "minter", type: "address" },
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
    ],
    name: "getTotalMints",
    outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      {
        components: [
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          {
            internalType: "enum ILazyPayableClaim.StorageProtocol",
            name: "storageProtocol",
            type: "uint8",
          },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          {
            internalType: "address payable",
            name: "paymentReceiver",
            type: "address",
          },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.ClaimParameters",
        name: "claimParameters",
        type: "tuple",
      },
    ],
    name: "initializeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "isAdmin",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint32", name: "mintIndex", type: "uint32" },
      { internalType: "bytes32[]", name: "merkleProof", type: "bytes32[]" },
      { internalType: "address", name: "mintFor", type: "address" },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint16", name: "mintCount", type: "uint16" },
      { internalType: "uint32[]", name: "mintIndices", type: "uint32[]" },
      {
        internalType: "bytes32[][]",
        name: "merkleProofs",
        type: "bytes32[][]",
      },
      { internalType: "address", name: "mintFor", type: "address" },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint16", name: "mintCount", type: "uint16" },
      { internalType: "uint32[]", name: "mintIndices", type: "uint32[]" },
      {
        internalType: "bytes32[][]",
        name: "merkleProofs",
        type: "bytes32[][]",
      },
      { internalType: "address", name: "mintFor", type: "address" },
    ],
    name: "mintProxy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      { internalType: "uint16", name: "mintCount", type: "uint16" },
      { internalType: "bytes", name: "signature", type: "bytes" },
      { internalType: "bytes32", name: "message", type: "bytes32" },
      { internalType: "bytes32", name: "nonce", type: "bytes32" },
      { internalType: "address", name: "mintFor", type: "address" },
      { internalType: "uint256", name: "expiration", type: "uint256" },
    ],
    name: "mintSignature",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "admin", type: "address" }],
    name: "revokeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "membershipAddress", type: "address" }],
    name: "setMembershipAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "uri", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      {
        components: [
          { internalType: "uint32", name: "totalMax", type: "uint32" },
          { internalType: "uint32", name: "walletMax", type: "uint32" },
          { internalType: "uint48", name: "startDate", type: "uint48" },
          { internalType: "uint48", name: "endDate", type: "uint48" },
          {
            internalType: "enum ILazyPayableClaim.StorageProtocol",
            name: "storageProtocol",
            type: "uint8",
          },
          { internalType: "bool", name: "identical", type: "bool" },
          { internalType: "bytes32", name: "merkleRoot", type: "bytes32" },
          { internalType: "string", name: "location", type: "string" },
          { internalType: "uint256", name: "cost", type: "uint256" },
          {
            internalType: "address payable",
            name: "paymentReceiver",
            type: "address",
          },
          { internalType: "address", name: "erc20", type: "address" },
          { internalType: "address", name: "signingAddress", type: "address" },
        ],
        internalType: "struct IERC721LazyPayableClaim.ClaimParameters",
        name: "claimParameters",
        type: "tuple",
      },
    ],
    name: "updateClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creatorContractAddress",
        type: "address",
      },
      { internalType: "uint256", name: "instanceId", type: "uint256" },
      {
        internalType: "enum ILazyPayableClaim.StorageProtocol",
        name: "storageProtocol",
        type: "uint8",
      },
      { internalType: "bool", name: "identical", type: "bool" },
      { internalType: "string", name: "location", type: "string" },
    ],
    name: "updateTokenURIParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address payable", name: "receiver", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export const erc1155Abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;
